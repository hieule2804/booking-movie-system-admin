@page "/screens"
@using BookingMovieSystem_Admin.Services
@using BookingMovieSystem_Admin.Dtos
@using Microsoft.AspNetCore.Components.QuickGrid
@inject IScreenService ScreenService

<PageTitle>Screen List</PageTitle>

<div class="container mt-4">
    <h1 class="text-primary text-center">Screen List</h1>

    <p class="text-end">
        <a href="screens/create" class="btn btn-success">Create New</a>
    </p>

    @if (screens != null)
    {
        <div class="table-responsive">
            <QuickGrid Class="table table-striped table-hover table-bordered" Items="screens" PageSize="5">
                <PropertyColumn Property="screen => screen.CinemaId" Title="Cinema ID" />
                <PropertyColumn Property="screen => screen.ScreenName" Title="Screen Name" />
                <PropertyColumn Property="screen => screen.SeatCount" Title="Total Seats" />

                <TemplateColumn Title="Actions" Context="screen">
                    <div class="d-flex justify-content-center gap-2">
                        <a href="@($"screens/edit?screenid={screen.ScreenId}")" class="btn btn-warning btn-sm">Edit</a>
                        <a href="@($"screens/details?screenid={screen.ScreenId}")" class="btn btn-info btn-sm">Details</a>
                        <a href="@($"screens/delete?screenid={screen.ScreenId}")" class="btn btn-danger btn-sm">Delete</a>
                    </div>
                </TemplateColumn>
            </QuickGrid>
        </div>
    }
    else
    {
        <p class="text-center text-muted">Loading screens...</p>
    }
</div>

@code {
    private IQueryable<ScreenDtos>? screens;

    protected override async Task OnInitializedAsync()
    {
        var screenList = await ScreenService.GetScreensWithSeatCountAsync();
        screens = screenList.AsQueryable();
    }
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>

@* <script src="~/microsoft/signalr/dist/browser/signalr.js"></script> *@

<script>
        // Kết nối đến SignalR Hub
    var connection = new signalR.HubConnectionBuilder()
        .withUrl("/screenHub")
        .build();


    //     var connection = new signalR.HubConnectionBuilder()
    // .withUrl("/foodHub", { accessTokenFactory: () => localStorage.getItem("authToken") })
    // .build();

    // Bắt đầu kết nối SignalR
    connection.start().catch(function (err) {
        console.error("❌ SignalR Connection Error:", err.toString());
    });

    // Lắng nghe sự kiện cập nhật
    connection.on("ReceiveUpdateNotification", function (screen) {

        location.reload();

    });
     connection.on("ReceiveAddNotification", function (screen) {

        location.reload();

    });
     connection.on("ReceiveDeleteNotification", function (screen) {

        location.reload();

    });

</script>