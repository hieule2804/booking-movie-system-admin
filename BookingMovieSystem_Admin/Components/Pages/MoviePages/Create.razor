@page "/movies/create"
@using Microsoft.EntityFrameworkCore
@using BookingMovieSystem_Admin.Models
@inject IDbContextFactory<BookingMovieSystem_Admin.Models.G5MovieTicketBookingSystemContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create Movie</PageTitle>

<div class="container mt-4">
    <h1 class="mb-4">Create Movie</h1>

    <h2 class="mb-3">Movie Information</h2>
    <hr />

    <EditForm method="post" Model="Movie" OnValidSubmit="AddMovie" FormName="create" Enhance>
        <DataAnnotationsValidator />
        <ValidationSummary class="text-danger" role="alert" />

        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label for="title" class="form-label">Title:</label>
                    <InputText id="title" @bind-Value="Movie.Title" class="form-control" />
                    <ValidationMessage For="() => Movie.Title" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="genre" class="form-label">Genre:</label>
                    <InputText id="genre" @bind-Value="Movie.Genre" class="form-control" />
                    <ValidationMessage For="() => Movie.Genre" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="duration" class="form-label">Duration (minutes):</label>
                    <InputNumber id="duration" @bind-Value="Movie.Duration" class="form-control" />
                    <ValidationMessage For="() => Movie.Duration" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="language" class="form-label">Language:</label>
                    <InputText id="language" @bind-Value="Movie.Language" class="form-control" />
                    <ValidationMessage For="() => Movie.Language" class="text-danger" />
                </div>
            </div>

            <div class="col-md-6">
                <div class="mb-3">
                    <label for="rating" class="form-label">Rating:</label>
                    <InputNumber id="rating" @bind-Value="Movie.Rating" class="form-control" />
                    <ValidationMessage For="() => Movie.Rating" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="releasedate" class="form-label">Release Date:</label>
                    <InputDate id="releasedate" @bind-Value="Movie.ReleaseDate" class="form-control" />
                    <ValidationMessage For="() => Movie.ReleaseDate" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="description" class="form-label">Description:</label>
                    <InputText id="description" @bind-Value="Movie.Description" class="form-control" />
                    <ValidationMessage For="() => Movie.Description" class="text-danger" />
                </div>
            </div>
        </div>

        <button type="submit" class="btn btn-primary">Create</button>
    </EditForm>

    <div class="mt-3">
        <a href="/movies" class="btn btn-secondary">Back to List</a>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private Movie Movie { get; set; } = new();

    private async Task AddMovie()
    {
        using var context = DbFactory.CreateDbContext();
        context.Movies.Add(Movie);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/movies");
    }
}
