@page "/cinemas"
@using Microsoft.EntityFrameworkCore
@using BookingMovieSystem_Admin.Models
@implements IAsyncDisposable
@inject IDbContextFactory<BookingMovieSystem_Admin.Models.G5MovieTicketBookingSystemContext> DbFactory

<PageTitle>Danh sách Rạp Chiếu Phim</PageTitle>

<div class="container mt-4">
    <h1 class="mb-4 text-center">Danh sách Rạp Chiếu Phim</h1>

    <div class="mb-3">
        <a href="cinemas/create" class="btn btn-success">➕ Thêm Rạp Mới</a>
    </div>

    @if (cinemas is null)
    {
        <p class="text-muted text-center"><em>Đang tải dữ liệu...</em></p>
    }
    else if (!cinemas.Any())
    {
        <p class="text-center text-danger"><strong>Không có rạp chiếu phim nào.</strong></p>
    }
    else
    {
        <div class="card shadow-lg">
            <div class="card-body">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>Tên Rạp</th>
                            <th>Thành phố</th>
                            <th>Địa chỉ</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var cinema in cinemas)
                        {
                            <tr>
                                <td>@cinema.CinemaName</td>
                                <td>@cinema.City</td>
                                <td>@cinema.Address</td>
                                <td>
                                    <a href="@($"cinemas/edit?cinemaid={cinema.CinemaId}")" class="btn btn-sm btn-warning">✏️ Chỉnh sửa</a>
                                    <a href="@($"cinemas/details?cinemaid={cinema.CinemaId}")" class="btn btn-sm btn-info">ℹ️ Chi tiết</a>
                                    <a href="@($"cinemas/delete?cinemaid={cinema.CinemaId}")" class="btn btn-sm btn-danger">🗑️ Xóa</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

@code {
    private List<Cinema> cinemas = new();

    protected override async Task OnInitializedAsync()
    {
        using var context = await DbFactory.CreateDbContextAsync();
        cinemas = await context.Cinemas.ToListAsync();
    }

    public async ValueTask DisposeAsync()
    {
        using var context = await DbFactory.CreateDbContextAsync();
        await context.DisposeAsync();
    }
}
