@page "/cinemas/create"
@using Microsoft.EntityFrameworkCore
@using BookingMovieSystem_Admin.Models
@inject IDbContextFactory<BookingMovieSystem_Admin.Models.G5MovieTicketBookingSystemContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create Cinema</h1>

<h2>Cinema</h2>
<hr />
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <EditForm method="post" Model="Cinema" OnValidSubmit="AddCinema" FormName="create" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" role="alert" />

                <div class="mb-3">
                    <label for="cinemaname" class="form-label">Cinema Name:</label>
                    <InputText id="cinemaname" @bind-Value="Cinema.CinemaName" class="form-control" aria-required="true" />
                    <ValidationMessage For="() => Cinema.CinemaName" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="city" class="form-label">City:</label>
                    <InputText id="city" @bind-Value="Cinema.City" class="form-control" aria-required="true" />
                    <ValidationMessage For="() => Cinema.City" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="address" class="form-label">Address:</label>
                    <InputText id="address" @bind-Value="Cinema.Address" class="form-control" aria-required="true" />
                    <ValidationMessage For="() => Cinema.Address" class="text-danger" />
                </div>

                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary btn-lg">Create</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

<div class="mt-3 text-center">
    <a href="/cinemas" class="btn btn-link">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Cinema Cinema { get; set; } = new();

    private async Task AddCinema()
    {
        using var context = DbFactory.CreateDbContext();
        context.Cinemas.Add(Cinema);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/cinemas");
    }
}
